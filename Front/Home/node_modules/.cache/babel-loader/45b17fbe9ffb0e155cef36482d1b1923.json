{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty2(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\"));\n\nvar _defineProperties = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/define-properties\"));\n\nvar _getOwnPropertyDescriptors = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors\"));\n\nvar _getOwnPropertyDescriptor = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\"));\n\nvar _filter = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\"));\n\nvar _getOwnPropertySymbols = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _defineProperty3 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = (0, _keys.default)(object);\n\n  if (_getOwnPropertySymbols.default) {\n    var symbols = (0, _getOwnPropertySymbols.default)(object);\n    if (enumerableOnly) symbols = (0, _filter.default)(symbols).call(symbols, function (sym) {\n      return (0, _getOwnPropertyDescriptor.default)(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      var _context5;\n\n      (0, _forEach.default)(_context5 = ownKeys(Object(source), true)).call(_context5, function (key) {\n        (0, _defineProperty3.default)(target, key, source[key]);\n      });\n    } else if (_getOwnPropertyDescriptors.default) {\n      (0, _defineProperties.default)(target, (0, _getOwnPropertyDescriptors.default)(source));\n    } else {\n      var _context6;\n\n      (0, _forEach.default)(_context6 = ownKeys(Object(source))).call(_context6, function (key) {\n        (0, _defineProperty2.default)(target, key, (0, _getOwnPropertyDescriptor.default)(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar ParseError = require('./ParseError').default;\n\nvar XHR = null;\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  XHR = XMLHttpRequest;\n}\n/*:: type Base64 = { base64: string };*/\n\n/*:: type Uri = { uri: string };*/\n\n/*:: type FileData = Array<number> | Base64 | Blob | Uri;*/\n\n/*:: export type FileSource = {\n  format: 'file';\n  file: Blob;\n  type: string\n} | {\n  format: 'base64';\n  base64: string;\n  type: string\n} | {\n  format: 'uri';\n  uri: string;\n  type: string\n};*/\n\n\nvar dataUriRegexp = /^data:([a-zA-Z]+\\/[-a-zA-Z0-9+.]+)(;charset=[a-zA-Z0-9\\-\\/]*)?;base64,/;\n\nfunction b64Digit(number\n/*: number*/\n)\n/*: string*/\n{\n  if (number < 26) {\n    return String.fromCharCode(65 + number);\n  }\n\n  if (number < 52) {\n    return String.fromCharCode(97 + (number - 26));\n  }\n\n  if (number < 62) {\n    return String.fromCharCode(48 + (number - 52));\n  }\n\n  if (number === 62) {\n    return '+';\n  }\n\n  if (number === 63) {\n    return '/';\n  }\n\n  throw new TypeError('Tried to encode large digit ' + number + ' in base64.');\n}\n/**\n * A Parse.File is a local representation of a file that is saved to the Parse\n * cloud.\n *\n * @alias Parse.File\n */\n\n\nvar ParseFile = /*#__PURE__*/function () {\n  /**\n   * @param name {String} The file's name. This will be prefixed by a unique\n   *     value once the file has finished saving. The file name must begin with\n   *     an alphanumeric character, and consist of alphanumeric characters,\n   *     periods, spaces, underscores, or dashes.\n   * @param data {Array} The data for the file, as either:\n   *     1. an Array of byte value Numbers, or\n   *     2. an Object like { base64: \"...\" } with a base64-encoded String.\n   *     3. an Object like { uri: \"...\" } with a uri String.\n   *     4. a File object selected with a file upload control. (3) only works\n   *        in Firefox 3.6+, Safari 6.0.2+, Chrome 7+, and IE 10+.\n   *        For example:\n   * <pre>\n   * var fileUploadControl = $(\"#profilePhotoFileUpload\")[0];\n   * if (fileUploadControl.files.length > 0) {\n   *   var file = fileUploadControl.files[0];\n   *   var name = \"photo.jpg\";\n   *   var parseFile = new Parse.File(name, file);\n   *   parseFile.save().then(function() {\n   *     // The file has been saved to Parse.\n   *   }, function(error) {\n   *     // The file either could not be read, or could not be saved to Parse.\n   *   });\n   * }</pre>\n   * @param type {String} Optional Content-Type header to use for the file. If\n   *     this is omitted, the content type will be inferred from the name's\n   *     extension.\n   * @param metadata {Object} Optional key value pairs to be stored with file object\n   * @param tags {Object} Optional key value pairs to be stored with file object\n   */\n  function ParseFile(name\n  /*: string*/\n  , data\n  /*:: ?: FileData*/\n  , type\n  /*:: ?: string*/\n  , metadata\n  /*:: ?: Object*/\n  , tags\n  /*:: ?: Object*/\n  ) {\n    (0, _classCallCheck2.default)(this, ParseFile);\n    (0, _defineProperty3.default)(this, \"_name\", void 0);\n    (0, _defineProperty3.default)(this, \"_url\", void 0);\n    (0, _defineProperty3.default)(this, \"_source\", void 0);\n    (0, _defineProperty3.default)(this, \"_previousSave\", void 0);\n    (0, _defineProperty3.default)(this, \"_data\", void 0);\n    (0, _defineProperty3.default)(this, \"_requestTask\", void 0);\n    (0, _defineProperty3.default)(this, \"_metadata\", void 0);\n    (0, _defineProperty3.default)(this, \"_tags\", void 0);\n    var specifiedType = type || '';\n    this._name = name;\n    this._metadata = metadata || {};\n    this._tags = tags || {};\n\n    if (data !== undefined) {\n      if ((0, _isArray.default)(data)) {\n        this._data = ParseFile.encodeBase64(data);\n        this._source = {\n          format: 'base64',\n          base64: this._data,\n          type: specifiedType\n        };\n      } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n        this._source = {\n          format: 'file',\n          file: data,\n          type: specifiedType\n        };\n      } else if (data && typeof data.uri === 'string' && data.uri !== undefined) {\n        this._source = {\n          format: 'uri',\n          uri: data.uri,\n          type: specifiedType\n        };\n      } else if (data && typeof data.base64 === 'string') {\n        var base64 = data.base64;\n        var commaIndex = (0, _indexOf.default)(base64).call(base64, ',');\n\n        if (commaIndex !== -1) {\n          var matches = dataUriRegexp.exec((0, _slice.default)(base64).call(base64, 0, commaIndex + 1)); // if data URI with type and charset, there will be 4 matches.\n\n          this._data = (0, _slice.default)(base64).call(base64, commaIndex + 1);\n          this._source = {\n            format: 'base64',\n            base64: this._data,\n            type: matches[1]\n          };\n        } else {\n          this._data = base64;\n          this._source = {\n            format: 'base64',\n            base64: base64,\n            type: specifiedType\n          };\n        }\n      } else {\n        throw new TypeError('Cannot create a Parse.File with that data.');\n      }\n    }\n  }\n  /**\n   * Return the data for the file, downloading it if not already present.\n   * Data is present if initialized with Byte Array, Base64 or Saved with Uri.\n   * Data is cleared if saved with File object selected with a file upload control\n   *\n   * @returns {Promise} Promise that is resolve with base64 data\n   */\n\n\n  (0, _createClass2.default)(ParseFile, [{\n    key: \"getData\",\n    value: function () {\n      var _getData = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n        var _this = this;\n\n        var options, controller, result;\n        return _regenerator.default.wrap(function (_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._data) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this._data);\n\n              case 2:\n                if (this._url) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw new Error('Cannot retrieve data for unsaved ParseFile.');\n\n              case 4:\n                options = {\n                  requestTask: function (task) {\n                    return _this._requestTask = task;\n                  }\n                };\n                controller = _CoreManager.default.getFileController();\n                _context.next = 8;\n                return controller.download(this._url, options);\n\n              case 8:\n                result = _context.sent;\n                this._data = result.base64;\n                return _context.abrupt(\"return\", this._data);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function () {\n        return _getData.apply(this, arguments);\n      };\n    }()\n    /**\n     * Gets the name of the file. Before save is called, this is the filename\n     * given by the user. After save is called, that name gets prefixed with a\n     * unique identifier.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: \"name\",\n    value: function ()\n    /*: string*/\n    {\n      return this._name;\n    }\n    /**\n     * Gets the url of the file. It is only available after you save the file or\n     * after you get the file from a Parse.Object.\n     *\n     * @param {object} options An object to specify url options\n     * @returns {string}\n     */\n\n  }, {\n    key: \"url\",\n    value: function (options\n    /*:: ?: { forceSecure?: boolean }*/\n    )\n    /*: ?string*/\n    {\n      options = options || {};\n\n      if (!this._url) {\n        return;\n      }\n\n      if (options.forceSecure) {\n        return this._url.replace(/^http:\\/\\//i, 'https://');\n      } else {\n        return this._url;\n      }\n    }\n    /**\n     * Gets the metadata of the file.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"metadata\",\n    value: function ()\n    /*: Object*/\n    {\n      return this._metadata;\n    }\n    /**\n     * Gets the tags of the file.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"tags\",\n    value: function ()\n    /*: Object*/\n    {\n      return this._tags;\n    }\n    /**\n     * Saves the file to the Parse cloud.\n     *\n     * @param {object} options\n     *  * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *     behalf of a specific user.\n     *   <li>progress: In Browser only, callback for upload progress. For example:\n     * <pre>\n     * let parseFile = new Parse.File(name, file);\n     * parseFile.save({\n     *   progress: (progressValue, loaded, total, { type }) => {\n     *     if (type === \"upload\" && progressValue !== null) {\n     *       // Update the UI using progressValue\n     *     }\n     *   }\n     * });\n     * </pre>\n     * </ul>\n     * @returns {Promise} Promise that is resolved when the save finishes.\n     */\n\n  }, {\n    key: \"save\",\n    value: function (options\n    /*:: ?: FullOptions*/\n    ) {\n      var _this2 = this;\n\n      options = options || {};\n\n      options.requestTask = function (task) {\n        return _this2._requestTask = task;\n      };\n\n      options.metadata = this._metadata;\n      options.tags = this._tags;\n\n      var controller = _CoreManager.default.getFileController();\n\n      if (!this._previousSave) {\n        if (this._source.format === 'file') {\n          this._previousSave = controller.saveFile(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._data = null;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else if (this._source.format === 'uri') {\n          this._previousSave = controller.download(this._source.uri, options).then(function (result) {\n            if (!(result && result.base64)) {\n              return {};\n            }\n\n            var newSource = {\n              format: 'base64',\n              base64: result.base64,\n              type: result.contentType\n            };\n            _this2._data = result.base64;\n            _this2._requestTask = null;\n            return controller.saveBase64(_this2._name, newSource, options);\n          }).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else {\n          this._previousSave = controller.saveBase64(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        }\n      }\n\n      if (this._previousSave) {\n        return this._previousSave;\n      }\n    }\n    /**\n     * Aborts the request if it has already been sent.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function () {\n      if (this._requestTask && typeof this._requestTask.abort === 'function') {\n        this._requestTask.abort();\n      }\n\n      this._requestTask = null;\n    }\n    /**\n     * Deletes the file from the Parse cloud.\n     * In Cloud Code and Node only with Master Key.\n     *\n     * @returns {Promise} Promise that is resolved when the delete finishes.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function () {\n      var _this3 = this;\n\n      if (!this._name) {\n        throw new ParseError(ParseError.FILE_DELETE_UNNAMED_ERROR, 'Cannot delete an unnamed file.');\n      }\n\n      var controller = _CoreManager.default.getFileController();\n\n      return controller.deleteFile(this._name).then(function () {\n        _this3._data = null;\n        _this3._requestTask = null;\n        return _this3;\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function ()\n    /*: { name: ?string, url: ?string }*/\n    {\n      return {\n        __type: 'File',\n        name: this._name,\n        url: this._url\n      };\n    }\n  }, {\n    key: \"equals\",\n    value: function (other\n    /*: mixed*/\n    )\n    /*: boolean*/\n    {\n      if (this === other) {\n        return true;\n      } // Unsaved Files are never equal, since they will be saved to different URLs\n\n\n      return other instanceof ParseFile && this.name() === other.name() && this.url() === other.url() && typeof this.url() !== 'undefined';\n    }\n    /**\n     * Sets metadata to be saved with file object. Overwrites existing metadata\n     *\n     * @param {object} metadata Key value pairs to be stored with file object\n     */\n\n  }, {\n    key: \"setMetadata\",\n    value: function (metadata\n    /*: any*/\n    ) {\n      var _this4 = this;\n\n      if (metadata && (0, _typeof2.default)(metadata) === 'object') {\n        var _context2;\n\n        (0, _forEach.default)(_context2 = (0, _keys.default)(metadata)).call(_context2, function (key) {\n          _this4.addMetadata(key, metadata[key]);\n        });\n      }\n    }\n    /**\n     * Sets metadata to be saved with file object. Adds to existing metadata.\n     *\n     * @param {string} key key to store the metadata\n     * @param {*} value metadata\n     */\n\n  }, {\n    key: \"addMetadata\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: any*/\n    ) {\n      if (typeof key === 'string') {\n        this._metadata[key] = value;\n      }\n    }\n    /**\n     * Sets tags to be saved with file object. Overwrites existing tags\n     *\n     * @param {object} tags Key value pairs to be stored with file object\n     */\n\n  }, {\n    key: \"setTags\",\n    value: function (tags\n    /*: any*/\n    ) {\n      var _this5 = this;\n\n      if (tags && (0, _typeof2.default)(tags) === 'object') {\n        var _context3;\n\n        (0, _forEach.default)(_context3 = (0, _keys.default)(tags)).call(_context3, function (key) {\n          _this5.addTag(key, tags[key]);\n        });\n      }\n    }\n    /**\n     * Sets tags to be saved with file object. Adds to existing tags.\n     *\n     * @param {string} key key to store tags\n     * @param {*} value tag\n     */\n\n  }, {\n    key: \"addTag\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: string*/\n    ) {\n      if (typeof key === 'string') {\n        this._tags[key] = value;\n      }\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function (obj)\n    /*: ParseFile*/\n    {\n      if (obj.__type !== 'File') {\n        throw new TypeError('JSON object does not represent a ParseFile');\n      }\n\n      var file = new ParseFile(obj.name);\n      file._url = obj.url;\n      return file;\n    }\n  }, {\n    key: \"encodeBase64\",\n    value: function (bytes\n    /*: Array<number>*/\n    )\n    /*: string*/\n    {\n      var chunks = [];\n      chunks.length = Math.ceil(bytes.length / 3);\n\n      for (var i = 0; i < chunks.length; i++) {\n        var b1 = bytes[i * 3];\n        var b2 = bytes[i * 3 + 1] || 0;\n        var b3 = bytes[i * 3 + 2] || 0;\n        var has2 = i * 3 + 1 < bytes.length;\n        var has3 = i * 3 + 2 < bytes.length;\n        chunks[i] = [b64Digit(b1 >> 2 & 0x3F), b64Digit(b1 << 4 & 0x30 | b2 >> 4 & 0x0F), has2 ? b64Digit(b2 << 2 & 0x3C | b3 >> 6 & 0x03) : '=', has3 ? b64Digit(b3 & 0x3F) : '='].join('');\n      }\n\n      return chunks.join('');\n    }\n  }]);\n  return ParseFile;\n}();\n\nvar DefaultController = {\n  saveFile: function () {\n    var _saveFile = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(name\n    /*: string*/\n    , source\n    /*: FileSource*/\n    , options\n    /*:: ?: FullOptions*/\n    ) {\n      var base64Data, _base64Data$split, _base64Data$split2, first, second, data, newSource;\n\n      return _regenerator.default.wrap(function (_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(source.format !== 'file')) {\n                _context4.next = 2;\n                break;\n              }\n\n              throw new Error('saveFile can only be used with File-type sources.');\n\n            case 2:\n              _context4.next = 4;\n              return new _promise.default(function (res, rej) {\n                // eslint-disable-next-line no-undef\n                var reader = new FileReader();\n\n                reader.onload = function () {\n                  return res(reader.result);\n                };\n\n                reader.onerror = function (error) {\n                  return rej(error);\n                };\n\n                reader.readAsDataURL(source.file);\n              });\n\n            case 4:\n              base64Data = _context4.sent; // we only want the data after the comma\n              // For example: \"data:application/pdf;base64,JVBERi0xLjQKJ...\" we would only want \"JVBERi0xLjQKJ...\"\n\n              _base64Data$split = base64Data.split(','), _base64Data$split2 = (0, _slicedToArray2.default)(_base64Data$split, 2), first = _base64Data$split2[0], second = _base64Data$split2[1]; // in the event there is no 'data:application/pdf;base64,' at the beginning of the base64 string\n              // use the entire string instead\n\n              data = second ? second : first;\n              newSource = {\n                format: 'base64',\n                base64: data,\n                type: source.type || (source.file ? source.file.type : null)\n              };\n              _context4.next = 10;\n              return DefaultController.saveBase64(name, newSource, options);\n\n            case 10:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function () {\n      return _saveFile.apply(this, arguments);\n    };\n  }(),\n  saveBase64: function (name\n  /*: string*/\n  , source\n  /*: FileSource*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    if (source.format !== 'base64') {\n      throw new Error('saveBase64 can only be used with Base64-type sources.');\n    }\n\n    var data\n    /*: { base64: any; _ContentType?: any, fileData: Object }*/\n    = {\n      base64: source.base64,\n      fileData: {\n        metadata: _objectSpread({}, options.metadata),\n        tags: _objectSpread({}, options.tags)\n      }\n    };\n    delete options.metadata;\n    delete options.tags;\n\n    if (source.type) {\n      data._ContentType = source.type;\n    }\n\n    return _CoreManager.default.getRESTController().request('POST', 'files/' + name, data, options);\n  },\n  download: function (uri, options) {\n    if (XHR) {\n      return this.downloadAjax(uri, options);\n    } else {\n      return _promise.default.reject('Cannot make a request: No definition of XMLHttpRequest was found.');\n    }\n  },\n  downloadAjax: function (uri, options) {\n    return new _promise.default(function (resolve, reject) {\n      var xhr = new XHR();\n      xhr.open('GET', uri, true);\n      xhr.responseType = 'arraybuffer';\n\n      xhr.onerror = function (e) {\n        reject(e);\n      };\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState !== xhr.DONE) {\n          return;\n        }\n\n        if (!this.response) {\n          return resolve({});\n        }\n\n        var bytes = new Uint8Array(this.response);\n        resolve({\n          base64: ParseFile.encodeBase64(bytes),\n          contentType: xhr.getResponseHeader('content-type')\n        });\n      };\n\n      options.requestTask(xhr);\n      xhr.send();\n    });\n  },\n  deleteFile: function (name) {\n    var headers = {\n      'X-Parse-Application-ID': _CoreManager.default.get('APPLICATION_ID'),\n      'X-Parse-Master-Key': _CoreManager.default.get('MASTER_KEY')\n    };\n\n    var url = _CoreManager.default.get('SERVER_URL');\n\n    if (url[url.length - 1] !== '/') {\n      url += '/';\n    }\n\n    url += 'files/' + name;\n    return _CoreManager.default.getRESTController().ajax('DELETE', url, '', headers).catch(function (response) {\n      // TODO: return JSON object in server\n      if (!response || response === 'SyntaxError: Unexpected end of JSON input') {\n        return _promise.default.resolve();\n      } else {\n        return _CoreManager.default.getRESTController().handleError(response);\n      }\n    });\n  },\n  _setXHR: function (xhr\n  /*: any*/\n  ) {\n    XHR = xhr;\n  },\n  _getXHR: function () {\n    return XHR;\n  }\n};\n\n_CoreManager.default.setFileController(DefaultController);\n\nvar _default = ParseFile;\nexports.default = _default;\nexports.b64Digit = b64Digit;","map":{"version":3,"sources":["/home/arsalan/Desktop/Front/Home/node_modules/parse/lib/browser/ParseFile.js"],"names":["_interopRequireDefault","require","_Object$defineProperty2","exports","value","default","_defineProperty2","_defineProperties","_getOwnPropertyDescriptors","_getOwnPropertyDescriptor","_filter","_getOwnPropertySymbols","_slicedToArray2","_promise","_keys","_forEach","_typeof2","_regenerator","_asyncToGenerator2","_slice","_indexOf","_isArray","_classCallCheck2","_createClass2","_defineProperty3","_CoreManager","ownKeys","object","enumerableOnly","keys","symbols","call","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","_context5","Object","key","_context6","ParseError","XHR","XMLHttpRequest","dataUriRegexp","b64Digit","number","String","fromCharCode","TypeError","ParseFile","name","data","type","metadata","tags","specifiedType","_name","_metadata","_tags","undefined","_data","encodeBase64","_source","format","base64","Blob","file","uri","commaIndex","matches","exec","_getData","mark","_callee","_this","options","controller","result","wrap","_context","prev","next","abrupt","_url","Error","requestTask","task","_requestTask","getFileController","download","sent","stop","forceSecure","replace","_this2","_previousSave","saveFile","then","res","url","newSource","contentType","saveBase64","abort","_this3","FILE_DELETE_UNNAMED_ERROR","deleteFile","__type","other","_this4","_context2","addMetadata","_this5","_context3","addTag","obj","bytes","chunks","Math","ceil","b1","b2","b3","has2","has3","join","DefaultController","_saveFile","_callee2","base64Data","_base64Data$split","_base64Data$split2","first","second","_context4","rej","reader","FileReader","onload","onerror","error","readAsDataURL","split","fileData","_ContentType","getRESTController","request","downloadAjax","reject","resolve","xhr","open","responseType","e","onreadystatechange","readyState","DONE","response","Uint8Array","getResponseHeader","send","headers","get","ajax","catch","handleError","_setXHR","_getXHR","setFileController","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty2(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\"));\n\nvar _defineProperties = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/define-properties\"));\n\nvar _getOwnPropertyDescriptors = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors\"));\n\nvar _getOwnPropertyDescriptor = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\"));\n\nvar _filter = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\"));\n\nvar _getOwnPropertySymbols = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _defineProperty3 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = (0, _keys.default)(object);\n\n  if (_getOwnPropertySymbols.default) {\n    var symbols = (0, _getOwnPropertySymbols.default)(object);\n    if (enumerableOnly) symbols = (0, _filter.default)(symbols).call(symbols, function (sym) {\n      return (0, _getOwnPropertyDescriptor.default)(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      var _context5;\n\n      (0, _forEach.default)(_context5 = ownKeys(Object(source), true)).call(_context5, function (key) {\n        (0, _defineProperty3.default)(target, key, source[key]);\n      });\n    } else if (_getOwnPropertyDescriptors.default) {\n      (0, _defineProperties.default)(target, (0, _getOwnPropertyDescriptors.default)(source));\n    } else {\n      var _context6;\n\n      (0, _forEach.default)(_context6 = ownKeys(Object(source))).call(_context6, function (key) {\n        (0, _defineProperty2.default)(target, key, (0, _getOwnPropertyDescriptor.default)(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar ParseError = require('./ParseError').default;\n\nvar XHR = null;\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  XHR = XMLHttpRequest;\n}\n\n/*:: type Base64 = { base64: string };*/\n\n/*:: type Uri = { uri: string };*/\n\n/*:: type FileData = Array<number> | Base64 | Blob | Uri;*/\n\n/*:: export type FileSource = {\n  format: 'file';\n  file: Blob;\n  type: string\n} | {\n  format: 'base64';\n  base64: string;\n  type: string\n} | {\n  format: 'uri';\n  uri: string;\n  type: string\n};*/\nvar dataUriRegexp = /^data:([a-zA-Z]+\\/[-a-zA-Z0-9+.]+)(;charset=[a-zA-Z0-9\\-\\/]*)?;base64,/;\n\nfunction b64Digit(number\n/*: number*/\n)\n/*: string*/\n{\n  if (number < 26) {\n    return String.fromCharCode(65 + number);\n  }\n\n  if (number < 52) {\n    return String.fromCharCode(97 + (number - 26));\n  }\n\n  if (number < 62) {\n    return String.fromCharCode(48 + (number - 52));\n  }\n\n  if (number === 62) {\n    return '+';\n  }\n\n  if (number === 63) {\n    return '/';\n  }\n\n  throw new TypeError('Tried to encode large digit ' + number + ' in base64.');\n}\n/**\n * A Parse.File is a local representation of a file that is saved to the Parse\n * cloud.\n *\n * @alias Parse.File\n */\n\n\nvar ParseFile = /*#__PURE__*/function () {\n  /**\n   * @param name {String} The file's name. This will be prefixed by a unique\n   *     value once the file has finished saving. The file name must begin with\n   *     an alphanumeric character, and consist of alphanumeric characters,\n   *     periods, spaces, underscores, or dashes.\n   * @param data {Array} The data for the file, as either:\n   *     1. an Array of byte value Numbers, or\n   *     2. an Object like { base64: \"...\" } with a base64-encoded String.\n   *     3. an Object like { uri: \"...\" } with a uri String.\n   *     4. a File object selected with a file upload control. (3) only works\n   *        in Firefox 3.6+, Safari 6.0.2+, Chrome 7+, and IE 10+.\n   *        For example:\n   * <pre>\n   * var fileUploadControl = $(\"#profilePhotoFileUpload\")[0];\n   * if (fileUploadControl.files.length > 0) {\n   *   var file = fileUploadControl.files[0];\n   *   var name = \"photo.jpg\";\n   *   var parseFile = new Parse.File(name, file);\n   *   parseFile.save().then(function() {\n   *     // The file has been saved to Parse.\n   *   }, function(error) {\n   *     // The file either could not be read, or could not be saved to Parse.\n   *   });\n   * }</pre>\n   * @param type {String} Optional Content-Type header to use for the file. If\n   *     this is omitted, the content type will be inferred from the name's\n   *     extension.\n   * @param metadata {Object} Optional key value pairs to be stored with file object\n   * @param tags {Object} Optional key value pairs to be stored with file object\n   */\n  function ParseFile(name\n  /*: string*/\n  , data\n  /*:: ?: FileData*/\n  , type\n  /*:: ?: string*/\n  , metadata\n  /*:: ?: Object*/\n  , tags\n  /*:: ?: Object*/\n  ) {\n    (0, _classCallCheck2.default)(this, ParseFile);\n    (0, _defineProperty3.default)(this, \"_name\", void 0);\n    (0, _defineProperty3.default)(this, \"_url\", void 0);\n    (0, _defineProperty3.default)(this, \"_source\", void 0);\n    (0, _defineProperty3.default)(this, \"_previousSave\", void 0);\n    (0, _defineProperty3.default)(this, \"_data\", void 0);\n    (0, _defineProperty3.default)(this, \"_requestTask\", void 0);\n    (0, _defineProperty3.default)(this, \"_metadata\", void 0);\n    (0, _defineProperty3.default)(this, \"_tags\", void 0);\n    var specifiedType = type || '';\n    this._name = name;\n    this._metadata = metadata || {};\n    this._tags = tags || {};\n\n    if (data !== undefined) {\n      if ((0, _isArray.default)(data)) {\n        this._data = ParseFile.encodeBase64(data);\n        this._source = {\n          format: 'base64',\n          base64: this._data,\n          type: specifiedType\n        };\n      } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n        this._source = {\n          format: 'file',\n          file: data,\n          type: specifiedType\n        };\n      } else if (data && typeof data.uri === 'string' && data.uri !== undefined) {\n        this._source = {\n          format: 'uri',\n          uri: data.uri,\n          type: specifiedType\n        };\n      } else if (data && typeof data.base64 === 'string') {\n        var base64 = data.base64;\n        var commaIndex = (0, _indexOf.default)(base64).call(base64, ',');\n\n        if (commaIndex !== -1) {\n          var matches = dataUriRegexp.exec((0, _slice.default)(base64).call(base64, 0, commaIndex + 1)); // if data URI with type and charset, there will be 4 matches.\n\n          this._data = (0, _slice.default)(base64).call(base64, commaIndex + 1);\n          this._source = {\n            format: 'base64',\n            base64: this._data,\n            type: matches[1]\n          };\n        } else {\n          this._data = base64;\n          this._source = {\n            format: 'base64',\n            base64: base64,\n            type: specifiedType\n          };\n        }\n      } else {\n        throw new TypeError('Cannot create a Parse.File with that data.');\n      }\n    }\n  }\n  /**\n   * Return the data for the file, downloading it if not already present.\n   * Data is present if initialized with Byte Array, Base64 or Saved with Uri.\n   * Data is cleared if saved with File object selected with a file upload control\n   *\n   * @returns {Promise} Promise that is resolve with base64 data\n   */\n\n\n  (0, _createClass2.default)(ParseFile, [{\n    key: \"getData\",\n    value: function () {\n      var _getData = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n        var _this = this;\n\n        var options, controller, result;\n        return _regenerator.default.wrap(function (_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._data) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this._data);\n\n              case 2:\n                if (this._url) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw new Error('Cannot retrieve data for unsaved ParseFile.');\n\n              case 4:\n                options = {\n                  requestTask: function (task) {\n                    return _this._requestTask = task;\n                  }\n                };\n                controller = _CoreManager.default.getFileController();\n                _context.next = 8;\n                return controller.download(this._url, options);\n\n              case 8:\n                result = _context.sent;\n                this._data = result.base64;\n                return _context.abrupt(\"return\", this._data);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function () {\n        return _getData.apply(this, arguments);\n      };\n    }()\n    /**\n     * Gets the name of the file. Before save is called, this is the filename\n     * given by the user. After save is called, that name gets prefixed with a\n     * unique identifier.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: \"name\",\n    value: function ()\n    /*: string*/\n    {\n      return this._name;\n    }\n    /**\n     * Gets the url of the file. It is only available after you save the file or\n     * after you get the file from a Parse.Object.\n     *\n     * @param {object} options An object to specify url options\n     * @returns {string}\n     */\n\n  }, {\n    key: \"url\",\n    value: function (options\n    /*:: ?: { forceSecure?: boolean }*/\n    )\n    /*: ?string*/\n    {\n      options = options || {};\n\n      if (!this._url) {\n        return;\n      }\n\n      if (options.forceSecure) {\n        return this._url.replace(/^http:\\/\\//i, 'https://');\n      } else {\n        return this._url;\n      }\n    }\n    /**\n     * Gets the metadata of the file.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"metadata\",\n    value: function ()\n    /*: Object*/\n    {\n      return this._metadata;\n    }\n    /**\n     * Gets the tags of the file.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"tags\",\n    value: function ()\n    /*: Object*/\n    {\n      return this._tags;\n    }\n    /**\n     * Saves the file to the Parse cloud.\n     *\n     * @param {object} options\n     *  * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *     behalf of a specific user.\n     *   <li>progress: In Browser only, callback for upload progress. For example:\n     * <pre>\n     * let parseFile = new Parse.File(name, file);\n     * parseFile.save({\n     *   progress: (progressValue, loaded, total, { type }) => {\n     *     if (type === \"upload\" && progressValue !== null) {\n     *       // Update the UI using progressValue\n     *     }\n     *   }\n     * });\n     * </pre>\n     * </ul>\n     * @returns {Promise} Promise that is resolved when the save finishes.\n     */\n\n  }, {\n    key: \"save\",\n    value: function (options\n    /*:: ?: FullOptions*/\n    ) {\n      var _this2 = this;\n\n      options = options || {};\n\n      options.requestTask = function (task) {\n        return _this2._requestTask = task;\n      };\n\n      options.metadata = this._metadata;\n      options.tags = this._tags;\n\n      var controller = _CoreManager.default.getFileController();\n\n      if (!this._previousSave) {\n        if (this._source.format === 'file') {\n          this._previousSave = controller.saveFile(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._data = null;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else if (this._source.format === 'uri') {\n          this._previousSave = controller.download(this._source.uri, options).then(function (result) {\n            if (!(result && result.base64)) {\n              return {};\n            }\n\n            var newSource = {\n              format: 'base64',\n              base64: result.base64,\n              type: result.contentType\n            };\n            _this2._data = result.base64;\n            _this2._requestTask = null;\n            return controller.saveBase64(_this2._name, newSource, options);\n          }).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else {\n          this._previousSave = controller.saveBase64(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        }\n      }\n\n      if (this._previousSave) {\n        return this._previousSave;\n      }\n    }\n    /**\n     * Aborts the request if it has already been sent.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function () {\n      if (this._requestTask && typeof this._requestTask.abort === 'function') {\n        this._requestTask.abort();\n      }\n\n      this._requestTask = null;\n    }\n    /**\n     * Deletes the file from the Parse cloud.\n     * In Cloud Code and Node only with Master Key.\n     *\n     * @returns {Promise} Promise that is resolved when the delete finishes.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function () {\n      var _this3 = this;\n\n      if (!this._name) {\n        throw new ParseError(ParseError.FILE_DELETE_UNNAMED_ERROR, 'Cannot delete an unnamed file.');\n      }\n\n      var controller = _CoreManager.default.getFileController();\n\n      return controller.deleteFile(this._name).then(function () {\n        _this3._data = null;\n        _this3._requestTask = null;\n        return _this3;\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function ()\n    /*: { name: ?string, url: ?string }*/\n    {\n      return {\n        __type: 'File',\n        name: this._name,\n        url: this._url\n      };\n    }\n  }, {\n    key: \"equals\",\n    value: function (other\n    /*: mixed*/\n    )\n    /*: boolean*/\n    {\n      if (this === other) {\n        return true;\n      } // Unsaved Files are never equal, since they will be saved to different URLs\n\n\n      return other instanceof ParseFile && this.name() === other.name() && this.url() === other.url() && typeof this.url() !== 'undefined';\n    }\n    /**\n     * Sets metadata to be saved with file object. Overwrites existing metadata\n     *\n     * @param {object} metadata Key value pairs to be stored with file object\n     */\n\n  }, {\n    key: \"setMetadata\",\n    value: function (metadata\n    /*: any*/\n    ) {\n      var _this4 = this;\n\n      if (metadata && (0, _typeof2.default)(metadata) === 'object') {\n        var _context2;\n\n        (0, _forEach.default)(_context2 = (0, _keys.default)(metadata)).call(_context2, function (key) {\n          _this4.addMetadata(key, metadata[key]);\n        });\n      }\n    }\n    /**\n     * Sets metadata to be saved with file object. Adds to existing metadata.\n     *\n     * @param {string} key key to store the metadata\n     * @param {*} value metadata\n     */\n\n  }, {\n    key: \"addMetadata\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: any*/\n    ) {\n      if (typeof key === 'string') {\n        this._metadata[key] = value;\n      }\n    }\n    /**\n     * Sets tags to be saved with file object. Overwrites existing tags\n     *\n     * @param {object} tags Key value pairs to be stored with file object\n     */\n\n  }, {\n    key: \"setTags\",\n    value: function (tags\n    /*: any*/\n    ) {\n      var _this5 = this;\n\n      if (tags && (0, _typeof2.default)(tags) === 'object') {\n        var _context3;\n\n        (0, _forEach.default)(_context3 = (0, _keys.default)(tags)).call(_context3, function (key) {\n          _this5.addTag(key, tags[key]);\n        });\n      }\n    }\n    /**\n     * Sets tags to be saved with file object. Adds to existing tags.\n     *\n     * @param {string} key key to store tags\n     * @param {*} value tag\n     */\n\n  }, {\n    key: \"addTag\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: string*/\n    ) {\n      if (typeof key === 'string') {\n        this._tags[key] = value;\n      }\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function (obj)\n    /*: ParseFile*/\n    {\n      if (obj.__type !== 'File') {\n        throw new TypeError('JSON object does not represent a ParseFile');\n      }\n\n      var file = new ParseFile(obj.name);\n      file._url = obj.url;\n      return file;\n    }\n  }, {\n    key: \"encodeBase64\",\n    value: function (bytes\n    /*: Array<number>*/\n    )\n    /*: string*/\n    {\n      var chunks = [];\n      chunks.length = Math.ceil(bytes.length / 3);\n\n      for (var i = 0; i < chunks.length; i++) {\n        var b1 = bytes[i * 3];\n        var b2 = bytes[i * 3 + 1] || 0;\n        var b3 = bytes[i * 3 + 2] || 0;\n        var has2 = i * 3 + 1 < bytes.length;\n        var has3 = i * 3 + 2 < bytes.length;\n        chunks[i] = [b64Digit(b1 >> 2 & 0x3F), b64Digit(b1 << 4 & 0x30 | b2 >> 4 & 0x0F), has2 ? b64Digit(b2 << 2 & 0x3C | b3 >> 6 & 0x03) : '=', has3 ? b64Digit(b3 & 0x3F) : '='].join('');\n      }\n\n      return chunks.join('');\n    }\n  }]);\n  return ParseFile;\n}();\n\nvar DefaultController = {\n  saveFile: function () {\n    var _saveFile = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(name\n    /*: string*/\n    , source\n    /*: FileSource*/\n    , options\n    /*:: ?: FullOptions*/\n    ) {\n      var base64Data, _base64Data$split, _base64Data$split2, first, second, data, newSource;\n\n      return _regenerator.default.wrap(function (_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(source.format !== 'file')) {\n                _context4.next = 2;\n                break;\n              }\n\n              throw new Error('saveFile can only be used with File-type sources.');\n\n            case 2:\n              _context4.next = 4;\n              return new _promise.default(function (res, rej) {\n                // eslint-disable-next-line no-undef\n                var reader = new FileReader();\n\n                reader.onload = function () {\n                  return res(reader.result);\n                };\n\n                reader.onerror = function (error) {\n                  return rej(error);\n                };\n\n                reader.readAsDataURL(source.file);\n              });\n\n            case 4:\n              base64Data = _context4.sent; // we only want the data after the comma\n              // For example: \"data:application/pdf;base64,JVBERi0xLjQKJ...\" we would only want \"JVBERi0xLjQKJ...\"\n\n              _base64Data$split = base64Data.split(','), _base64Data$split2 = (0, _slicedToArray2.default)(_base64Data$split, 2), first = _base64Data$split2[0], second = _base64Data$split2[1]; // in the event there is no 'data:application/pdf;base64,' at the beginning of the base64 string\n              // use the entire string instead\n\n              data = second ? second : first;\n              newSource = {\n                format: 'base64',\n                base64: data,\n                type: source.type || (source.file ? source.file.type : null)\n              };\n              _context4.next = 10;\n              return DefaultController.saveBase64(name, newSource, options);\n\n            case 10:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function () {\n      return _saveFile.apply(this, arguments);\n    };\n  }(),\n  saveBase64: function (name\n  /*: string*/\n  , source\n  /*: FileSource*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    if (source.format !== 'base64') {\n      throw new Error('saveBase64 can only be used with Base64-type sources.');\n    }\n\n    var data\n    /*: { base64: any; _ContentType?: any, fileData: Object }*/\n    = {\n      base64: source.base64,\n      fileData: {\n        metadata: _objectSpread({}, options.metadata),\n        tags: _objectSpread({}, options.tags)\n      }\n    };\n    delete options.metadata;\n    delete options.tags;\n\n    if (source.type) {\n      data._ContentType = source.type;\n    }\n\n    return _CoreManager.default.getRESTController().request('POST', 'files/' + name, data, options);\n  },\n  download: function (uri, options) {\n    if (XHR) {\n      return this.downloadAjax(uri, options);\n    } else {\n      return _promise.default.reject('Cannot make a request: No definition of XMLHttpRequest was found.');\n    }\n  },\n  downloadAjax: function (uri, options) {\n    return new _promise.default(function (resolve, reject) {\n      var xhr = new XHR();\n      xhr.open('GET', uri, true);\n      xhr.responseType = 'arraybuffer';\n\n      xhr.onerror = function (e) {\n        reject(e);\n      };\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState !== xhr.DONE) {\n          return;\n        }\n\n        if (!this.response) {\n          return resolve({});\n        }\n\n        var bytes = new Uint8Array(this.response);\n        resolve({\n          base64: ParseFile.encodeBase64(bytes),\n          contentType: xhr.getResponseHeader('content-type')\n        });\n      };\n\n      options.requestTask(xhr);\n      xhr.send();\n    });\n  },\n  deleteFile: function (name) {\n    var headers = {\n      'X-Parse-Application-ID': _CoreManager.default.get('APPLICATION_ID'),\n      'X-Parse-Master-Key': _CoreManager.default.get('MASTER_KEY')\n    };\n\n    var url = _CoreManager.default.get('SERVER_URL');\n\n    if (url[url.length - 1] !== '/') {\n      url += '/';\n    }\n\n    url += 'files/' + name;\n    return _CoreManager.default.getRESTController().ajax('DELETE', url, '', headers).catch(function (response) {\n      // TODO: return JSON object in server\n      if (!response || response === 'SyntaxError: Unexpected end of JSON input') {\n        return _promise.default.resolve();\n      } else {\n        return _CoreManager.default.getRESTController().handleError(response);\n      }\n    });\n  },\n  _setXHR: function (xhr\n  /*: any*/\n  ) {\n    XHR = xhr;\n  },\n  _getXHR: function () {\n    return XHR;\n  }\n};\n\n_CoreManager.default.setFileController(DefaultController);\n\nvar _default = ParseFile;\nexports.default = _default;\nexports.b64Digit = b64Digit;"]},"metadata":{},"sourceType":"script"}