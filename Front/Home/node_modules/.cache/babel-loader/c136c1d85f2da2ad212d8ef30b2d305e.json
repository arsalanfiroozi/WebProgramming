{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _getIterator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js/get-iterator\"));\n\nvar _getIteratorMethod2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js/get-iterator-method\"));\n\nvar _symbol = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/symbol\"));\n\nvar _from = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/from\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/map\"));\n\nvar _filter = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof _symbol.default === \"undefined\" || (0, _getIteratorMethod2.default)(o) == null) {\n    if ((0, _isArray.default)(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = (0, _getIterator2.default)(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context5;\n\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = (0, _slice.default)(_context5 = Object.prototype.toString.call(o)).call(_context5, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return (0, _from.default)(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar equalObjects = require('./equals').default;\n\nvar decode = require('./decode').default;\n\nvar ParseError = require('./ParseError').default;\n\nvar ParsePolygon = require('./ParsePolygon').default;\n\nvar ParseGeoPoint = require('./ParseGeoPoint').default;\n/**\n * contains -- Determines if an object is contained in a list with special handling for Parse pointers.\n *\n * @param haystack\n * @param needle\n * @private\n * @returns {boolean}\n */\n\n\nfunction contains(haystack, needle) {\n  if (needle && needle.__type && (needle.__type === 'Pointer' || needle.__type === 'Object')) {\n    for (var i in haystack) {\n      var ptr = haystack[i];\n\n      if (typeof ptr === 'string' && ptr === needle.objectId) {\n        return true;\n      }\n\n      if (ptr.className === needle.className && ptr.objectId === needle.objectId) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return (0, _indexOf.default)(haystack).call(haystack, needle) > -1;\n}\n\nfunction transformObject(object) {\n  if (object._toFullJSON) {\n    return object._toFullJSON();\n  }\n\n  return object;\n}\n/**\n * matchesQuery -- Determines if an object would be returned by a Parse Query\n * It's a lightweight, where-clause only implementation of a full query engine.\n * Since we find queries that match objects, rather than objects that match\n * queries, we can avoid building a full-blown query tool.\n *\n * @param className\n * @param object\n * @param objects\n * @param query\n * @private\n * @returns {boolean}\n */\n\n\nfunction matchesQuery(className, object, objects, query) {\n  if (object.className !== className) {\n    return false;\n  }\n\n  var obj = object;\n  var q = query;\n\n  if (object.toJSON) {\n    obj = object.toJSON();\n  }\n\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n\n  obj.className = className;\n\n  for (var field in q) {\n    if (!matchesKeyConstraints(className, obj, objects, field, q[field])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction equalObjectsGeneric(obj, compareTo, eqlFn) {\n  if ((0, _isArray.default)(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      if (eqlFn(obj[i], compareTo)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return eqlFn(obj, compareTo);\n}\n/**\n * Determines whether an object matches a single key's constraints\n *\n * @param className\n * @param object\n * @param objects\n * @param key\n * @param constraints\n * @private\n * @returns {boolean}\n */\n\n\nfunction matchesKeyConstraints(className, object, objects, key, constraints) {\n  if (constraints === null) {\n    return false;\n  }\n\n  if ((0, _indexOf.default)(key).call(key, '.') >= 0) {\n    // Key references a subobject\n    var keyComponents = key.split('.');\n    var subObjectKey = keyComponents[0];\n    var keyRemainder = (0, _slice.default)(keyComponents).call(keyComponents, 1).join('.');\n    return matchesKeyConstraints(className, object[subObjectKey] || {}, objects, keyRemainder, constraints);\n  }\n\n  var i;\n\n  if (key === '$or') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (key === '$and') {\n    for (i = 0; i < constraints.length; i++) {\n      if (!matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (key === '$nor') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (key === '$relatedTo') {\n    // Bail! We can't handle relational queries locally\n    return false;\n  }\n\n  if (!/^[A-Za-z][0-9A-Za-z_]*$/.test(key)) {\n    throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid Key: \".concat(key));\n  } // Equality (or Array contains) cases\n\n\n  if ((0, _typeof2.default)(constraints) !== 'object') {\n    if ((0, _isArray.default)(object[key])) {\n      var _context;\n\n      return (0, _indexOf.default)(_context = object[key]).call(_context, constraints) > -1;\n    }\n\n    return object[key] === constraints;\n  }\n\n  var compareTo;\n\n  if (constraints.__type) {\n    if (constraints.__type === 'Pointer') {\n      return equalObjectsGeneric(object[key], constraints, function (obj, ptr) {\n        return typeof obj !== 'undefined' && ptr.className === obj.className && ptr.objectId === obj.objectId;\n      });\n    }\n\n    return equalObjectsGeneric(decode(object[key]), decode(constraints), equalObjects);\n  } // More complex cases\n\n\n  for (var condition in constraints) {\n    compareTo = constraints[condition];\n\n    if (compareTo.__type) {\n      compareTo = decode(compareTo);\n    } // Compare Date Object or Date String\n\n\n    if (toString.call(compareTo) === '[object Date]' || typeof compareTo === 'string' && new Date(compareTo) !== 'Invalid Date' && !isNaN(new Date(compareTo))) {\n      object[key] = new Date(object[key].iso ? object[key].iso : object[key]);\n    }\n\n    switch (condition) {\n      case '$lt':\n        if (object[key] >= compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$lte':\n        if (object[key] > compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$gt':\n        if (object[key] <= compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$gte':\n        if (object[key] < compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$ne':\n        if (equalObjects(object[key], compareTo)) {\n          return false;\n        }\n\n        break;\n\n      case '$in':\n        if (!contains(compareTo, object[key])) {\n          return false;\n        }\n\n        break;\n\n      case '$nin':\n        if (contains(compareTo, object[key])) {\n          return false;\n        }\n\n        break;\n\n      case '$all':\n        for (i = 0; i < compareTo.length; i++) {\n          var _context2;\n\n          if ((0, _indexOf.default)(_context2 = object[key]).call(_context2, compareTo[i]) < 0) {\n            return false;\n          }\n        }\n\n        break;\n\n      case '$exists':\n        {\n          var propertyExists = typeof object[key] !== 'undefined';\n          var existenceIsRequired = constraints['$exists'];\n\n          if (typeof constraints['$exists'] !== 'boolean') {\n            // The SDK will never submit a non-boolean for $exists, but if someone\n            // tries to submit a non-boolean for $exits outside the SDKs, just ignore it.\n            break;\n          }\n\n          if (!propertyExists && existenceIsRequired || propertyExists && !existenceIsRequired) {\n            return false;\n          }\n\n          break;\n        }\n\n      case '$regex':\n        {\n          if ((0, _typeof2.default)(compareTo) === 'object') {\n            return compareTo.test(object[key]);\n          } // JS doesn't support perl-style escaping\n\n\n          var expString = '';\n          var escapeEnd = -2;\n          var escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q');\n\n          while (escapeStart > -1) {\n            // Add the unescaped portion\n            expString += compareTo.substring(escapeEnd + 2, escapeStart);\n            escapeEnd = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\E', escapeStart);\n\n            if (escapeEnd > -1) {\n              expString += compareTo.substring(escapeStart + 2, escapeEnd).replace(/\\\\\\\\\\\\\\\\E/g, '\\\\E').replace(/\\W/g, '\\\\$&');\n            }\n\n            escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q', escapeEnd);\n          }\n\n          expString += compareTo.substring(Math.max(escapeStart, escapeEnd + 2));\n          var modifiers = constraints.$options || '';\n          modifiers = modifiers.replace('x', '').replace('s', ''); // Parse Server / Mongo support x and s modifiers but JS RegExp doesn't\n\n          var exp = new RegExp(expString, modifiers);\n\n          if (!exp.test(object[key])) {\n            return false;\n          }\n\n          break;\n        }\n\n      case '$nearSphere':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n\n          var distance = compareTo.radiansTo(object[key]);\n          var max = constraints.$maxDistance || Infinity;\n          return distance <= max;\n        }\n\n      case '$within':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n\n          var southWest = compareTo.$box[0];\n          var northEast = compareTo.$box[1];\n\n          if (southWest.latitude > northEast.latitude || southWest.longitude > northEast.longitude) {\n            // Invalid box, crosses the date line\n            return false;\n          }\n\n          return object[key].latitude > southWest.latitude && object[key].latitude < northEast.latitude && object[key].longitude > southWest.longitude && object[key].longitude < northEast.longitude;\n        }\n\n      case '$options':\n        // Not a query type, but a way to add options to $regex. Ignore and\n        // avoid the default\n        break;\n\n      case '$maxDistance':\n        // Not a query type, but a way to add a cap to $nearSphere. Ignore and\n        // avoid the default\n        break;\n\n      case '$select':\n        {\n          var subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n\n          for (var _i = 0; _i < subQueryObjects.length; _i += 1) {\n            var subObject = transformObject(subQueryObjects[_i]);\n            return equalObjects(object[key], subObject[compareTo.key]);\n          }\n\n          return false;\n        }\n\n      case '$dontSelect':\n        {\n          var _subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n\n          for (var _i2 = 0; _i2 < _subQueryObjects.length; _i2 += 1) {\n            var _subObject = transformObject(_subQueryObjects[_i2]);\n\n            return !equalObjects(object[key], _subObject[compareTo.key]);\n          }\n\n          return false;\n        }\n\n      case '$inQuery':\n        {\n          var _subQueryObjects2 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n\n          for (var _i3 = 0; _i3 < _subQueryObjects2.length; _i3 += 1) {\n            var _subObject2 = transformObject(_subQueryObjects2[_i3]);\n\n            if (object[key].className === _subObject2.className && object[key].objectId === _subObject2.objectId) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n\n      case '$notInQuery':\n        {\n          var _subQueryObjects3 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n\n          for (var _i4 = 0; _i4 < _subQueryObjects3.length; _i4 += 1) {\n            var _subObject3 = transformObject(_subQueryObjects3[_i4]);\n\n            if (object[key].className === _subObject3.className && object[key].objectId === _subObject3.objectId) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n      case '$containedBy':\n        {\n          var _iterator = _createForOfIteratorHelper(object[key]),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var value = _step.value;\n\n              if (!contains(compareTo, value)) {\n                return false;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          return true;\n        }\n\n      case '$geoWithin':\n        {\n          var _context3;\n\n          var points = (0, _map.default)(_context3 = compareTo.$polygon).call(_context3, function (geoPoint) {\n            return [geoPoint.latitude, geoPoint.longitude];\n          });\n          var polygon = new ParsePolygon(points);\n          return polygon.containsPoint(object[key]);\n        }\n\n      case '$geoIntersects':\n        {\n          var _polygon = new ParsePolygon(object[key].coordinates);\n\n          var point = new ParseGeoPoint(compareTo.$point);\n          return _polygon.containsPoint(point);\n        }\n\n      default:\n        return false;\n    }\n  }\n\n  return true;\n}\n\nfunction validateQuery(query\n/*: any*/\n) {\n  var _context4;\n\n  var q = query;\n\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n\n  var specialQuerykeys = ['$and', '$or', '$nor', '_rperm', '_wperm', '_perishable_token', '_email_verify_token', '_email_verify_token_expires_at', '_account_lockout_expires_at', '_failed_login_count'];\n  (0, _forEach.default)(_context4 = (0, _keys.default)(q)).call(_context4, function (key) {\n    if (q && q[key] && q[key].$regex) {\n      if (typeof q[key].$options === 'string') {\n        if (!q[key].$options.match(/^[imxs]+$/)) {\n          throw new ParseError(ParseError.INVALID_QUERY, \"Bad $options value for query: \".concat(q[key].$options));\n        }\n      }\n    }\n\n    if ((0, _indexOf.default)(specialQuerykeys).call(specialQuerykeys, key) < 0 && !key.match(/^[a-zA-Z][a-zA-Z0-9_\\.]*$/)) {\n      throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid key name: \".concat(key));\n    }\n  });\n}\n\nvar OfflineQuery = {\n  matchesQuery: matchesQuery,\n  validateQuery: validateQuery\n};\nmodule.exports = OfflineQuery;","map":{"version":3,"sources":["/home/arsalan/Desktop/Front/Home/node_modules/parse/lib/browser/OfflineQuery.js"],"names":["_interopRequireDefault","require","_getIterator2","_getIteratorMethod2","_symbol","_from","_keys","_forEach","_map","_filter","_typeof2","_slice","_isArray","_indexOf","_createForOfIteratorHelper","o","allowArrayLike","it","default","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","return","minLen","_context5","_arrayLikeToArray","Object","prototype","toString","call","constructor","name","test","arr","len","arr2","Array","equalObjects","decode","ParseError","ParsePolygon","ParseGeoPoint","contains","haystack","needle","__type","ptr","objectId","className","transformObject","object","_toFullJSON","matchesQuery","objects","query","obj","q","toJSON","where","field","matchesKeyConstraints","equalObjectsGeneric","compareTo","eqlFn","key","constraints","keyComponents","split","subObjectKey","keyRemainder","join","INVALID_KEY_NAME","concat","_context","condition","Date","isNaN","iso","_context2","propertyExists","existenceIsRequired","expString","escapeEnd","escapeStart","substring","replace","Math","max","modifiers","$options","exp","RegExp","distance","radiansTo","$maxDistance","Infinity","southWest","$box","northEast","latitude","longitude","subQueryObjects","index","_i","subObject","_subQueryObjects","_i2","_subObject","_subQueryObjects2","_i3","_subObject2","_subQueryObjects3","_i4","_subObject3","_iterator","_step","_context3","points","$polygon","geoPoint","polygon","containsPoint","_polygon","coordinates","point","$point","validateQuery","_context4","specialQuerykeys","$regex","match","INVALID_QUERY","OfflineQuery","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _getIterator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js/get-iterator\"));\n\nvar _getIteratorMethod2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js/get-iterator-method\"));\n\nvar _symbol = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/symbol\"));\n\nvar _from = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/from\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/map\"));\n\nvar _filter = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof _symbol.default === \"undefined\" || (0, _getIteratorMethod2.default)(o) == null) {\n    if ((0, _isArray.default)(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = (0, _getIterator2.default)(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context5;\n\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = (0, _slice.default)(_context5 = Object.prototype.toString.call(o)).call(_context5, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return (0, _from.default)(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar equalObjects = require('./equals').default;\n\nvar decode = require('./decode').default;\n\nvar ParseError = require('./ParseError').default;\n\nvar ParsePolygon = require('./ParsePolygon').default;\n\nvar ParseGeoPoint = require('./ParseGeoPoint').default;\n/**\n * contains -- Determines if an object is contained in a list with special handling for Parse pointers.\n *\n * @param haystack\n * @param needle\n * @private\n * @returns {boolean}\n */\n\n\nfunction contains(haystack, needle) {\n  if (needle && needle.__type && (needle.__type === 'Pointer' || needle.__type === 'Object')) {\n    for (var i in haystack) {\n      var ptr = haystack[i];\n\n      if (typeof ptr === 'string' && ptr === needle.objectId) {\n        return true;\n      }\n\n      if (ptr.className === needle.className && ptr.objectId === needle.objectId) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return (0, _indexOf.default)(haystack).call(haystack, needle) > -1;\n}\n\nfunction transformObject(object) {\n  if (object._toFullJSON) {\n    return object._toFullJSON();\n  }\n\n  return object;\n}\n/**\n * matchesQuery -- Determines if an object would be returned by a Parse Query\n * It's a lightweight, where-clause only implementation of a full query engine.\n * Since we find queries that match objects, rather than objects that match\n * queries, we can avoid building a full-blown query tool.\n *\n * @param className\n * @param object\n * @param objects\n * @param query\n * @private\n * @returns {boolean}\n */\n\n\nfunction matchesQuery(className, object, objects, query) {\n  if (object.className !== className) {\n    return false;\n  }\n\n  var obj = object;\n  var q = query;\n\n  if (object.toJSON) {\n    obj = object.toJSON();\n  }\n\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n\n  obj.className = className;\n\n  for (var field in q) {\n    if (!matchesKeyConstraints(className, obj, objects, field, q[field])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction equalObjectsGeneric(obj, compareTo, eqlFn) {\n  if ((0, _isArray.default)(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      if (eqlFn(obj[i], compareTo)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return eqlFn(obj, compareTo);\n}\n/**\n * Determines whether an object matches a single key's constraints\n *\n * @param className\n * @param object\n * @param objects\n * @param key\n * @param constraints\n * @private\n * @returns {boolean}\n */\n\n\nfunction matchesKeyConstraints(className, object, objects, key, constraints) {\n  if (constraints === null) {\n    return false;\n  }\n\n  if ((0, _indexOf.default)(key).call(key, '.') >= 0) {\n    // Key references a subobject\n    var keyComponents = key.split('.');\n    var subObjectKey = keyComponents[0];\n    var keyRemainder = (0, _slice.default)(keyComponents).call(keyComponents, 1).join('.');\n    return matchesKeyConstraints(className, object[subObjectKey] || {}, objects, keyRemainder, constraints);\n  }\n\n  var i;\n\n  if (key === '$or') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (key === '$and') {\n    for (i = 0; i < constraints.length; i++) {\n      if (!matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (key === '$nor') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (key === '$relatedTo') {\n    // Bail! We can't handle relational queries locally\n    return false;\n  }\n\n  if (!/^[A-Za-z][0-9A-Za-z_]*$/.test(key)) {\n    throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid Key: \".concat(key));\n  } // Equality (or Array contains) cases\n\n\n  if ((0, _typeof2.default)(constraints) !== 'object') {\n    if ((0, _isArray.default)(object[key])) {\n      var _context;\n\n      return (0, _indexOf.default)(_context = object[key]).call(_context, constraints) > -1;\n    }\n\n    return object[key] === constraints;\n  }\n\n  var compareTo;\n\n  if (constraints.__type) {\n    if (constraints.__type === 'Pointer') {\n      return equalObjectsGeneric(object[key], constraints, function (obj, ptr) {\n        return typeof obj !== 'undefined' && ptr.className === obj.className && ptr.objectId === obj.objectId;\n      });\n    }\n\n    return equalObjectsGeneric(decode(object[key]), decode(constraints), equalObjects);\n  } // More complex cases\n\n\n  for (var condition in constraints) {\n    compareTo = constraints[condition];\n\n    if (compareTo.__type) {\n      compareTo = decode(compareTo);\n    } // Compare Date Object or Date String\n\n\n    if (toString.call(compareTo) === '[object Date]' || typeof compareTo === 'string' && new Date(compareTo) !== 'Invalid Date' && !isNaN(new Date(compareTo))) {\n      object[key] = new Date(object[key].iso ? object[key].iso : object[key]);\n    }\n\n    switch (condition) {\n      case '$lt':\n        if (object[key] >= compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$lte':\n        if (object[key] > compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$gt':\n        if (object[key] <= compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$gte':\n        if (object[key] < compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$ne':\n        if (equalObjects(object[key], compareTo)) {\n          return false;\n        }\n\n        break;\n\n      case '$in':\n        if (!contains(compareTo, object[key])) {\n          return false;\n        }\n\n        break;\n\n      case '$nin':\n        if (contains(compareTo, object[key])) {\n          return false;\n        }\n\n        break;\n\n      case '$all':\n        for (i = 0; i < compareTo.length; i++) {\n          var _context2;\n\n          if ((0, _indexOf.default)(_context2 = object[key]).call(_context2, compareTo[i]) < 0) {\n            return false;\n          }\n        }\n\n        break;\n\n      case '$exists':\n        {\n          var propertyExists = typeof object[key] !== 'undefined';\n          var existenceIsRequired = constraints['$exists'];\n\n          if (typeof constraints['$exists'] !== 'boolean') {\n            // The SDK will never submit a non-boolean for $exists, but if someone\n            // tries to submit a non-boolean for $exits outside the SDKs, just ignore it.\n            break;\n          }\n\n          if (!propertyExists && existenceIsRequired || propertyExists && !existenceIsRequired) {\n            return false;\n          }\n\n          break;\n        }\n\n      case '$regex':\n        {\n          if ((0, _typeof2.default)(compareTo) === 'object') {\n            return compareTo.test(object[key]);\n          } // JS doesn't support perl-style escaping\n\n\n          var expString = '';\n          var escapeEnd = -2;\n          var escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q');\n\n          while (escapeStart > -1) {\n            // Add the unescaped portion\n            expString += compareTo.substring(escapeEnd + 2, escapeStart);\n            escapeEnd = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\E', escapeStart);\n\n            if (escapeEnd > -1) {\n              expString += compareTo.substring(escapeStart + 2, escapeEnd).replace(/\\\\\\\\\\\\\\\\E/g, '\\\\E').replace(/\\W/g, '\\\\$&');\n            }\n\n            escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q', escapeEnd);\n          }\n\n          expString += compareTo.substring(Math.max(escapeStart, escapeEnd + 2));\n          var modifiers = constraints.$options || '';\n          modifiers = modifiers.replace('x', '').replace('s', ''); // Parse Server / Mongo support x and s modifiers but JS RegExp doesn't\n\n          var exp = new RegExp(expString, modifiers);\n\n          if (!exp.test(object[key])) {\n            return false;\n          }\n\n          break;\n        }\n\n      case '$nearSphere':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n\n          var distance = compareTo.radiansTo(object[key]);\n          var max = constraints.$maxDistance || Infinity;\n          return distance <= max;\n        }\n\n      case '$within':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n\n          var southWest = compareTo.$box[0];\n          var northEast = compareTo.$box[1];\n\n          if (southWest.latitude > northEast.latitude || southWest.longitude > northEast.longitude) {\n            // Invalid box, crosses the date line\n            return false;\n          }\n\n          return object[key].latitude > southWest.latitude && object[key].latitude < northEast.latitude && object[key].longitude > southWest.longitude && object[key].longitude < northEast.longitude;\n        }\n\n      case '$options':\n        // Not a query type, but a way to add options to $regex. Ignore and\n        // avoid the default\n        break;\n\n      case '$maxDistance':\n        // Not a query type, but a way to add a cap to $nearSphere. Ignore and\n        // avoid the default\n        break;\n\n      case '$select':\n        {\n          var subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n\n          for (var _i = 0; _i < subQueryObjects.length; _i += 1) {\n            var subObject = transformObject(subQueryObjects[_i]);\n            return equalObjects(object[key], subObject[compareTo.key]);\n          }\n\n          return false;\n        }\n\n      case '$dontSelect':\n        {\n          var _subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n\n          for (var _i2 = 0; _i2 < _subQueryObjects.length; _i2 += 1) {\n            var _subObject = transformObject(_subQueryObjects[_i2]);\n\n            return !equalObjects(object[key], _subObject[compareTo.key]);\n          }\n\n          return false;\n        }\n\n      case '$inQuery':\n        {\n          var _subQueryObjects2 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n\n          for (var _i3 = 0; _i3 < _subQueryObjects2.length; _i3 += 1) {\n            var _subObject2 = transformObject(_subQueryObjects2[_i3]);\n\n            if (object[key].className === _subObject2.className && object[key].objectId === _subObject2.objectId) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n\n      case '$notInQuery':\n        {\n          var _subQueryObjects3 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n\n          for (var _i4 = 0; _i4 < _subQueryObjects3.length; _i4 += 1) {\n            var _subObject3 = transformObject(_subQueryObjects3[_i4]);\n\n            if (object[key].className === _subObject3.className && object[key].objectId === _subObject3.objectId) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n      case '$containedBy':\n        {\n          var _iterator = _createForOfIteratorHelper(object[key]),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var value = _step.value;\n\n              if (!contains(compareTo, value)) {\n                return false;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          return true;\n        }\n\n      case '$geoWithin':\n        {\n          var _context3;\n\n          var points = (0, _map.default)(_context3 = compareTo.$polygon).call(_context3, function (geoPoint) {\n            return [geoPoint.latitude, geoPoint.longitude];\n          });\n          var polygon = new ParsePolygon(points);\n          return polygon.containsPoint(object[key]);\n        }\n\n      case '$geoIntersects':\n        {\n          var _polygon = new ParsePolygon(object[key].coordinates);\n\n          var point = new ParseGeoPoint(compareTo.$point);\n          return _polygon.containsPoint(point);\n        }\n\n      default:\n        return false;\n    }\n  }\n\n  return true;\n}\n\nfunction validateQuery(query\n/*: any*/\n) {\n  var _context4;\n\n  var q = query;\n\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n\n  var specialQuerykeys = ['$and', '$or', '$nor', '_rperm', '_wperm', '_perishable_token', '_email_verify_token', '_email_verify_token_expires_at', '_account_lockout_expires_at', '_failed_login_count'];\n  (0, _forEach.default)(_context4 = (0, _keys.default)(q)).call(_context4, function (key) {\n    if (q && q[key] && q[key].$regex) {\n      if (typeof q[key].$options === 'string') {\n        if (!q[key].$options.match(/^[imxs]+$/)) {\n          throw new ParseError(ParseError.INVALID_QUERY, \"Bad $options value for query: \".concat(q[key].$options));\n        }\n      }\n    }\n\n    if ((0, _indexOf.default)(specialQuerykeys).call(specialQuerykeys, key) < 0 && !key.match(/^[a-zA-Z][a-zA-Z0-9_\\.]*$/)) {\n      throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid key name: \".concat(key));\n    }\n  });\n}\n\nvar OfflineQuery = {\n  matchesQuery: matchesQuery,\n  validateQuery: validateQuery\n};\nmodule.exports = OfflineQuery;"]},"metadata":{},"sourceType":"script"}