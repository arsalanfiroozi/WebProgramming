{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _construct = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _isRevocableSession = _interopRequireDefault(require(\"./isRevocableSession\"));\n\nvar _ParseObject2 = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _ParseUser = _interopRequireDefault(require(\"./ParseUser\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = (0, _construct.default)(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_construct.default) return false;\n  if (_construct.default.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call((0, _construct.default)(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * <p>A Parse.Session object is a local representation of a revocable session.\n * This class is a subclass of a Parse.Object, and retains the same\n * functionality of a Parse.Object.</p>\n *\n * @alias Parse.Session\n * @augments Parse.Object\n */\n\n\nvar ParseSession = /*#__PURE__*/function (_ParseObject) {\n  (0, _inherits2.default)(ParseSession, _ParseObject);\n\n  var _super = _createSuper(ParseSession);\n  /**\n   * @param {object} attributes The initial set of data to store in the user.\n   */\n\n\n  function ParseSession(attributes\n  /*: ?AttributeMap*/\n  ) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ParseSession);\n    _this = _super.call(this, '_Session');\n\n    if (attributes && (0, _typeof2.default)(attributes) === 'object') {\n      if (!_this.set(attributes || {})) {\n        throw new Error('Can\\'t create an invalid Session');\n      }\n    }\n\n    return _this;\n  }\n  /**\n   * Returns the session token string.\n   *\n   * @returns {string}\n   */\n\n\n  (0, _createClass2.default)(ParseSession, [{\n    key: \"getSessionToken\",\n    value: function ()\n    /*: string*/\n    {\n      var token = this.get('sessionToken');\n\n      if (typeof token === 'string') {\n        return token;\n      }\n\n      return '';\n    }\n  }], [{\n    key: \"readOnlyAttributes\",\n    value: function () {\n      return ['createdWith', 'expiresAt', 'installationId', 'restricted', 'sessionToken', 'user'];\n    }\n    /**\n     * Retrieves the Session object for the currently logged in session.\n     *\n     * @param {object} options useMasterKey\n     * @static\n     * @returns {Promise} A promise that is resolved with the Parse.Session\n     * object after it has been fetched. If there is no current user, the\n     * promise will be rejected.\n     */\n\n  }, {\n    key: \"current\",\n    value: function (options\n    /*: FullOptions*/\n    ) {\n      options = options || {};\n\n      var controller = _CoreManager.default.getSessionController();\n\n      var sessionOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        sessionOptions.useMasterKey = options.useMasterKey;\n      }\n\n      return _ParseUser.default.currentAsync().then(function (user) {\n        if (!user) {\n          return _promise.default.reject('There is no current user.');\n        }\n\n        sessionOptions.sessionToken = user.getSessionToken();\n        return controller.getSession(sessionOptions);\n      });\n    }\n    /**\n     * Determines whether the current session token is revocable.\n     * This method is useful for migrating Express.js or Node.js web apps to\n     * use revocable sessions. If you are migrating an app that uses the Parse\n     * SDK in the browser only, please use Parse.User.enableRevocableSession()\n     * instead, so that sessions can be automatically upgraded.\n     *\n     * @static\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isCurrentSessionRevocable\",\n    value: function ()\n    /*: boolean*/\n    {\n      var currentUser = _ParseUser.default.current();\n\n      if (currentUser) {\n        return (0, _isRevocableSession.default)(currentUser.getSessionToken() || '');\n      }\n\n      return false;\n    }\n  }]);\n  return ParseSession;\n}(_ParseObject2.default);\n\n_ParseObject2.default.registerSubclass('_Session', ParseSession);\n\nvar DefaultController = {\n  getSession: function (options\n  /*: RequestOptions*/\n  )\n  /*: Promise<ParseSession>*/\n  {\n    var RESTController = _CoreManager.default.getRESTController();\n\n    var session = new ParseSession();\n    return RESTController.request('GET', 'sessions/me', {}, options).then(function (sessionData) {\n      session._finishFetch(sessionData);\n\n      session._setExisted(true);\n\n      return session;\n    });\n  }\n};\n\n_CoreManager.default.setSessionController(DefaultController);\n\nvar _default = ParseSession;\nexports.default = _default;","map":{"version":3,"sources":["/home/arsalan/Desktop/Front/Home/node_modules/parse/lib/browser/ParseSession.js"],"names":["_interopRequireDefault","require","_Object$defineProperty","exports","value","default","_construct","_promise","_typeof2","_classCallCheck2","_createClass2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_CoreManager","_isRevocableSession","_ParseObject2","_ParseUser","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","result","NewTarget","constructor","arguments","apply","Reflect","sham","Proxy","Date","prototype","toString","call","e","ParseSession","_ParseObject","_super","attributes","_this","set","Error","key","token","get","options","controller","getSessionController","sessionOptions","hasOwnProperty","useMasterKey","currentAsync","then","user","reject","sessionToken","getSessionToken","getSession","currentUser","current","registerSubclass","DefaultController","RESTController","getRESTController","session","request","sessionData","_finishFetch","_setExisted","setSessionController","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _construct = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _isRevocableSession = _interopRequireDefault(require(\"./isRevocableSession\"));\n\nvar _ParseObject2 = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _ParseUser = _interopRequireDefault(require(\"./ParseUser\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = (0, _construct.default)(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_construct.default) return false;\n  if (_construct.default.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call((0, _construct.default)(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * <p>A Parse.Session object is a local representation of a revocable session.\n * This class is a subclass of a Parse.Object, and retains the same\n * functionality of a Parse.Object.</p>\n *\n * @alias Parse.Session\n * @augments Parse.Object\n */\n\n\nvar ParseSession = /*#__PURE__*/function (_ParseObject) {\n  (0, _inherits2.default)(ParseSession, _ParseObject);\n\n  var _super = _createSuper(ParseSession);\n  /**\n   * @param {object} attributes The initial set of data to store in the user.\n   */\n\n\n  function ParseSession(attributes\n  /*: ?AttributeMap*/\n  ) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ParseSession);\n    _this = _super.call(this, '_Session');\n\n    if (attributes && (0, _typeof2.default)(attributes) === 'object') {\n      if (!_this.set(attributes || {})) {\n        throw new Error('Can\\'t create an invalid Session');\n      }\n    }\n\n    return _this;\n  }\n  /**\n   * Returns the session token string.\n   *\n   * @returns {string}\n   */\n\n\n  (0, _createClass2.default)(ParseSession, [{\n    key: \"getSessionToken\",\n    value: function ()\n    /*: string*/\n    {\n      var token = this.get('sessionToken');\n\n      if (typeof token === 'string') {\n        return token;\n      }\n\n      return '';\n    }\n  }], [{\n    key: \"readOnlyAttributes\",\n    value: function () {\n      return ['createdWith', 'expiresAt', 'installationId', 'restricted', 'sessionToken', 'user'];\n    }\n    /**\n     * Retrieves the Session object for the currently logged in session.\n     *\n     * @param {object} options useMasterKey\n     * @static\n     * @returns {Promise} A promise that is resolved with the Parse.Session\n     * object after it has been fetched. If there is no current user, the\n     * promise will be rejected.\n     */\n\n  }, {\n    key: \"current\",\n    value: function (options\n    /*: FullOptions*/\n    ) {\n      options = options || {};\n\n      var controller = _CoreManager.default.getSessionController();\n\n      var sessionOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        sessionOptions.useMasterKey = options.useMasterKey;\n      }\n\n      return _ParseUser.default.currentAsync().then(function (user) {\n        if (!user) {\n          return _promise.default.reject('There is no current user.');\n        }\n\n        sessionOptions.sessionToken = user.getSessionToken();\n        return controller.getSession(sessionOptions);\n      });\n    }\n    /**\n     * Determines whether the current session token is revocable.\n     * This method is useful for migrating Express.js or Node.js web apps to\n     * use revocable sessions. If you are migrating an app that uses the Parse\n     * SDK in the browser only, please use Parse.User.enableRevocableSession()\n     * instead, so that sessions can be automatically upgraded.\n     *\n     * @static\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isCurrentSessionRevocable\",\n    value: function ()\n    /*: boolean*/\n    {\n      var currentUser = _ParseUser.default.current();\n\n      if (currentUser) {\n        return (0, _isRevocableSession.default)(currentUser.getSessionToken() || '');\n      }\n\n      return false;\n    }\n  }]);\n  return ParseSession;\n}(_ParseObject2.default);\n\n_ParseObject2.default.registerSubclass('_Session', ParseSession);\n\nvar DefaultController = {\n  getSession: function (options\n  /*: RequestOptions*/\n  )\n  /*: Promise<ParseSession>*/\n  {\n    var RESTController = _CoreManager.default.getRESTController();\n\n    var session = new ParseSession();\n    return RESTController.request('GET', 'sessions/me', {}, options).then(function (sessionData) {\n      session._finishFetch(sessionData);\n\n      session._setExisted(true);\n\n      return session;\n    });\n  }\n};\n\n_CoreManager.default.setSessionController(DefaultController);\n\nvar _default = ParseSession;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}