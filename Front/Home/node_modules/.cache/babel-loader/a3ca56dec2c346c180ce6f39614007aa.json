{"ast":null,"code":"var _jsxFileName = \"/home/arsalan/Desktop/Front/Home/src/components/Home/CoinTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, Table } from 'react-bootstrap';\nimport { coinChartBaseURL, coinSVGBaseURL, serverURL } from '../../IPAddresses/IPaddresses';\nimport * as FaIcons from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Parse = require('parse');\n\nParse.initialize('myAppID');\nParse.serverURL = serverURL;\n\nfunction CoinTable() {\n  _s();\n\n  const [btcData, setbtcData] = useState([]);\n  const [ethData, setethData] = useState([]);\n  const [isReady, setIsReady] = useState(false);\n\n  async function table() {\n    let query = new Parse.Query('CoinTable');\n    let subscription = await query.subscribe();\n    subscription.on('update', object => {\n      var dayChange = object.get(\"dayChange\");\n      var bestBuy = object.get(\"bestBuy\");\n      var bestSell = object.get(\"bestSell\");\n      console.log(\"New DATA!\");\n      console.log(\"dayChange\", dayChange);\n      console.log(\"bestBuy\", bestBuy);\n      console.log(\"bestSell\", bestSell);\n\n      if (object.get(\"market\") == \"btc-rls\") {\n        setbtcData([{\n          \"dayChange\": dayChange,\n          \"bestBuy\": bestBuy,\n          \"bestSell\": bestSell\n        }]);\n        setIsReady(true);\n      } else {\n        setethData([{\n          \"dayChange\": dayChange,\n          \"bestBuy\": bestBuy,\n          \"bestSell\": bestSell\n        }]);\n        setIsReady(true);\n      }\n    });\n  }\n\n  useEffect(() => {\n    table();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              responsive: true,\n              hover: true,\n              style: {\n                textAlign: 'center',\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                style: {\n                  color: '#1D2A37'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Coin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Daily Change\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Best Buy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Best Sell\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Chart\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: isReady ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [btcData.map((item, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          style: {\n                            width: \"40px\",\n                            height: \"40px\"\n                          },\n                          src: coinSVGBaseURL + 'btc' + '.svg'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 72,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 71,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: \"Bitcoin\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.dayChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 75,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.bestBuy\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 76,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.bestSell\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: coinChartBaseURL + 'btc' + '.png'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 78,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 80,\n                        columnNumber: 53\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 56\n                    }, this);\n                  }), ethData.map((item, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          style: {\n                            width: \"40px\",\n                            height: \"40px\"\n                          },\n                          src: coinSVGBaseURL + 'eth' + '.svg'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 87,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 86,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: \"Ethereum\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.dayChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 90,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.bestBuy\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.bestSell\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 92,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: coinChartBaseURL + 'eth' + '.png'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 93,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 53\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 56\n                    }, this);\n                  })]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(FaIcons.FaSync, {\n                      icon: \"spinner\",\n                      className: \"spinner\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(CoinTable, \"xmxrwxuhxsGMK/fWnaomcatyD1s=\");\n\n_c = CoinTable;\nexport default CoinTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinTable\");","map":{"version":3,"sources":["/home/arsalan/Desktop/Front/Home/src/components/Home/CoinTable.js"],"names":["React","useEffect","useState","Row","Col","Card","Table","coinChartBaseURL","coinSVGBaseURL","serverURL","FaIcons","Parse","require","initialize","CoinTable","btcData","setbtcData","ethData","setethData","isReady","setIsReady","table","query","Query","subscription","subscribe","on","object","dayChange","get","bestBuy","bestSell","console","log","textAlign","width","color","map","item","index","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Row, Col, Card, Table } from 'react-bootstrap';\nimport { coinChartBaseURL, coinSVGBaseURL, serverURL } from '../../IPAddresses/IPaddresses';\nimport * as FaIcons from 'react-icons/fa';\n\nconst Parse = require('parse');\n\nParse.initialize('myAppID');\nParse.serverURL = serverURL;\n\nfunction CoinTable() {\n\n    const [btcData, setbtcData] = useState([]);\n    const [ethData, setethData] = useState([]);\n    const [isReady, setIsReady] = useState(false);\n\n    async function table() {\n        let query = new Parse.Query('CoinTable');\n        let subscription = await query.subscribe();\n\n        subscription.on('update', (object) => {\n\n            var dayChange = object.get(\"dayChange\");\n            var bestBuy = object.get(\"bestBuy\");\n            var bestSell = object.get(\"bestSell\");\n\n            console.log(\"New DATA!\");\n            console.log(\"dayChange\", dayChange);\n            console.log(\"bestBuy\", bestBuy);\n            console.log(\"bestSell\", bestSell);\n\n            if (object.get(\"market\") == \"btc-rls\") {\n                setbtcData([{ \"dayChange\": dayChange, \"bestBuy\": bestBuy, \"bestSell\": bestSell }]);\n                setIsReady(true);\n            } else {\n                setethData([{ \"dayChange\": dayChange, \"bestBuy\": bestBuy, \"bestSell\": bestSell }]);\n                setIsReady(true);\n            }\n\n        });\n    }\n\n    useEffect(() => {\n        table();\n    });\n\n    return (\n        <>\n            <div class=\"container\">\n                <Row>\n                    <Col>\n                        <br />\n                        <Card>\n                            <Table responsive hover style={{ textAlign: 'center', width: '100%' }}>\n                                <thead style={{ color: '#1D2A37' }}>\n                                    <tr>\n                                        <th></th>\n                                        <th>Coin</th>\n                                        <th>Daily Change</th>\n                                        <th>Best Buy</th>\n                                        <th>Best Sell</th>\n                                        <th>Chart</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n\n                                    {isReady ?\n                                        <>\n                                            {btcData.map((item, index) => {\n                                                return <tr key={index}>\n                                                    <td>\n                                                        <img style={{ width: \"40px\", height: \"40px\" }} src={coinSVGBaseURL + 'btc' + '.svg'}></img>\n                                                    </td>\n                                                    <td>Bitcoin</td>\n                                                    <td>{item.dayChange}</td>\n                                                    <td>{item.bestBuy}</td>\n                                                    <td>{item.bestSell}</td>\n                                                    <td><img src={coinChartBaseURL + 'btc' + '.png'}></img>\n                                                    </td>\n                                                    <td>{ }</td>\n                                                </tr>\n                                            })}\n\n                                            {ethData.map((item, index) => {\n                                                return <tr key={index}>\n                                                    <td>\n                                                        <img style={{ width: \"40px\", height: \"40px\" }} src={coinSVGBaseURL + 'eth' + '.svg'}></img>\n                                                    </td>\n                                                    <td>Ethereum</td>\n                                                    <td>{item.dayChange}</td>\n                                                    <td>{item.bestBuy}</td>\n                                                    <td>{item.bestSell}</td>\n                                                    <td><img src={coinChartBaseURL + 'eth' + '.png'}></img>\n                                                    </td>\n                                                </tr>\n                                            })}\n                                        </>\n                                        :\n                                        <tr>\n                                            <td><FaIcons.FaSync icon=\"spinner\" className=\"spinner\" /></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                        </tr>\n                                    }\n\n                                </tbody>\n                            </Table>\n                        </Card>\n                        <br />\n                    </Col>\n                </Row>\n            </div>\n        </>\n    )\n}\n\nexport default CoinTable;"]},"metadata":{},"sourceType":"module"}